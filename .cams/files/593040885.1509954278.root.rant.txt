why i don't want to use hashing.

1. it's complicated
2. it's computationally expensive
3. It's a recipie for complication, a whatever approach

repo
  - flist
commits
  - cindex
  - files
  - message
branchens
  - commnits
  - parent branch

[branch functinos]
create branch
makes new folder, sets up new trunk commit by copying all files over

new function for creating a clean history set of commits (copys all files and creates a flat cindex, and flist)
cams retrunk [new branch]

checkout for individual files does not make new branch

what does merge look like

when do collisions occur

[new files storage schema]
store all files in a files directory
with the names in the folowing format
collision_id:djb2 16 bit hex
for example
0AF112FE98BC189AC
where 0 is the collission id, and AF112FE98BC189AC is the djb2 hex

upon adding a file with an existing hash, the contetents are compared and the collision id is set
on collision it compares them again in cascading order of collisions
